<?xml version="1.0" encoding="UTF-8"?><apiPackage id="factories"><apiName>factories</apiName><apiDetail/><apiClassifier id="factories:TreeFactory"><apiName>TreeFactory</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="factories:TreeFactory:create1NodeCollection_Appointment"><apiName>create1NodeCollection_Appointment</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="collections:TreeCollectionEx"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="factories:TreeFactory:create1NodeCollection"><apiName>create1NodeCollection</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="collections:TreeCollectionEx"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="factories:TreeFactory:create1Node"><apiName>create1Node</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="collections:TreeCollectionEx"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="factories:TreeFactory:createAllElements"><apiName>createAllElements</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="collections:TreeCollectionEx"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="factories:TreeFactory:createBinaryFullTree_3Levels"><apiName>createBinaryFullTree_3Levels</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="collections:TreeCollectionEx"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="factories:TreeFactory:createFullTree_3Levels"><apiName>createFullTree_3Levels</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="collections:TreeCollectionEx"/></apiReturn><apiParam><apiItemName>num1</apiItemName><apiType value="int"/></apiParam><apiParam><apiItemName>num2</apiItemName><apiType value="int"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="factories:TreeFactory:createFullTree"><apiName>createFullTree</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="collections:TreeCollectionEx"/></apiReturn><apiParam><apiItemName>numNodesInBranch</apiItemName><apiType value="int"/></apiParam><apiParam><apiItemName>depth</apiItemName><apiType value="int"/></apiParam><apiParam><apiItemName>res</apiItemName><apiType value="collections:TreeCollectionEx"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="factories:TreeFactory:createNode"><apiName>createNode</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="collections:TreeCollectionEx"/></apiReturn><apiParam><apiItemName>voType</apiItemName><apiType value="Class"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="factories:TreeFactory:createParentChildCollectionIncludingProgram"><apiName>createParentChildCollectionIncludingProgram</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="collections:TreeCollectionEx"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="factories:TreeFactory:createParentChildCollection"><apiName>createParentChildCollection</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="collections:TreeCollectionEx"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="factories:TreeFactory:createParentChildHPTaskTree"><apiName>createParentChildHPTaskTree</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="collections:TreeCollectionEx"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="factories:TreeFactory:createParentNChildren"><apiName>createParentNChildren</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="collections:TreeCollectionEx"/></apiReturn><apiParam><apiItemName>n</apiItemName><apiType value="int"/></apiParam><apiParam><apiItemName>name</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="factories:TreeFactory:createPriorityTaskTree2WithRanks"><apiName>createPriorityTaskTree2WithRanks</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="collections:TreeCollectionEx"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="factories:TreeFactory:createPriorityTaskTree2"><apiName>createPriorityTaskTree2</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="collections:TreeCollectionEx"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="factories:TreeFactory:createPriorityTaskTree"><apiName>createPriorityTaskTree</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="collections:TreeCollectionEx"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="factories:TreeFactory:createRandomTaskTree"><apiName>createRandomTaskTree</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="collections:TreeCollectionEx"/></apiReturn><apiParam><apiItemName>numNodes</apiItemName><apiType value="int"/></apiParam><apiParam><apiItemName>useNodeIndexAsLabel</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="factories:TreeFactory:createRandomTree"><apiName>createRandomTree</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="collections:TreeCollectionEx"/></apiReturn><apiParam><apiItemName>numNodes</apiItemName><apiType value="int"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="factories:TreeFactory:createRandomVoTree"><apiName>createRandomVoTree</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="collections:TreeCollectionEx"/></apiReturn><apiParam><apiItemName>numNodes</apiItemName><apiType value="int"/></apiParam><apiParam><apiItemName>types</apiItemName><apiType value="Array"/></apiParam><apiParam><apiItemName>useNodeIndexAsLabel</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="factories:TreeFactory:createSimpleCollection"><apiName>createSimpleCollection</apiName><shortdesc> Everything
  		 		Project1
  		 			Task1
  		 			Appointment1
  		 		Project2
  		  Preorder traversal: Everything, Project1, Task1, Appointment1, Project2
  		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="collections:TreeCollectionEx"/></apiReturn></apiOperationDef><apiDesc> Everything
  		 		Project1
  		 			Task1
  		 			Appointment1
  		 		Project2
  		  Preorder traversal: Everything, Project1, Task1, Appointment1, Project2
  		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="factories:TreeFactory:createSimplePrologProgram"><apiName>createSimplePrologProgram</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="collections:TreeCollectionEx"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="factories:TreeFactory:createTaskAppointment"><apiName>createTaskAppointment</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="collections:TreeCollectionEx"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="factories:TreeFactory:createTaskTree2"><apiName>createTaskTree2</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="collections:TreeCollectionEx"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="factories:TreeFactory:createTree1"><apiName>createTree1</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>
		 
		     2 - 3
		   /
		 1       5
		   \   /
		     4
		       \
		         6
		 </apiDesc><apiType value="collections:TreeCollectionEx"/></apiReturn></apiOperationDef><apiDesc>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="factories:TreeFactory:createTree2"><apiName>createTree2</apiName><shortdesc>      2 
		      /    4
		    /    /
		  1 -- 3
		    \     \
		      \    5  
		       6
		    
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="collections:TreeCollectionEx"/></apiReturn></apiOperationDef><apiDesc>      2 
		      /    4
		    /    /
		  1 -- 3
		    \     \
		      \    5  
		       6
		    
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="factories:TreeFactory:createVo"><apiName>createVo</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="any"/></apiReturn><apiParam><apiItemName>voType</apiItemName><apiType value="Class"/></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>0</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="factories:POFactory"><apiName>POFactory</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="factories:POFactory:createBinaryTree"><apiName>createBinaryTree</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="collections:TreeCollectionEx"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="factories:POFactory:createTasks1"><apiName>createTasks1</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="Array"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation></apiClassifier></apiPackage>