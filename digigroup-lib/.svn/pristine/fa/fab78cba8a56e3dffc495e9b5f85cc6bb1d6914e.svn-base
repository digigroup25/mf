<?xml version="1.0" encoding="utf-8"?>
<oh:ObjectHandles  xmlns:mx="http://www.adobe.com/2006/mxml" mouseChildren="true" mouseCursors="{null}" 
	allowRotate="false" xmlns:oh="com.roguedevelopment.objecthandles.*" allowKeyboardManipulation="false" 
	xmlns:components="components.*" borderStyle="solid"
	backgroundColor="0xffffff" 
	implements="components.IWindowShadeStack"
	>
	 
	<components:WindowShadeStack id="stack" width="100%" height="100%"/>
	<mx:Script>
	<![CDATA[
		import mx.events.FlexEvent;
		
		public function addWindowShade(child:DisplayObject, closeable:Boolean, resizable:Boolean):DisplayObject {
			return stack.addWindowShade(child, closeable, resizable);
		}
		
		public function removeWindowShade(child:DisplayObject):void {
			stack.removeWindowShade(child);
		}
		
		override protected function measure():void {
			super.measure();
			this.measuredMinWidth = this.measuredWidth = stack.getExplicitOrMeasuredWidth() + 5;
			this.measuredMinHeight = this.measuredHeight = stack.getExplicitOrMeasuredHeight() + 5;
			//trace("ResizableWindowShadeStack.measure", this.measuredWidth, this.measuredHeight);
		}
		
		/* private function onInitialize(event:FlexEvent):void {
			this.addEventListener(WindowShadeEvent.EXPAND, onResize);
			this.addEventListener(WindowShadeEvent.COLLAPSE, onResize);
		}
		
		
		private function onResize(event:Event):void {
			trace("ResizableWindowShadeStack.onResize", event.toString());
			this.invalidateSize();
			this.invalidateDisplayList();
		} */
	]]>
	</mx:Script>	
</oh:ObjectHandles>
